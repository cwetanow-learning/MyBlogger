@using BlogSystem.Web.Models

@model BlogSystem.Domain.Contracts.Entities.IPost

@{
    ViewBag.Title = "PostView";
    var isAuthor = Model.Author.Name.Equals(this.User.Identity.Name);
}

<div class="row">

    <!-- Blog Post Content Column -->
    <div class="col-lg-8">

        <!-- Blog Post -->
        <!-- Title -->
        <h1>@Model.Title</h1>
        @if (isAuthor ||
                         this.User.IsInRole(BlogSystem.Domain.Utils.GlobalConstants.AdministratorRole))
        {
            @Html.ActionLink(" ", "Delete",
    new { controller = "Blog", postId = Model.PostId },
    new { @class = "pull-right glyphicon glyphicon-trash big", onclick = "return confirm('Are you sure you wish to delete this article?');" })
        }

        @if (isAuthor)
        {
            @Html.ActionLink(" ", "Edit", new { controller = "Blog", postId = Model.PostId }, new { @class = "pull-right glyphicon glyphicon-edit big" })
        }

        <!-- Author -->
        <p class="lead">
           @Html.ActionLink(Model.Author.UserName,
           "Index",
           new { controller = "Profile", userId = Model.Author.Id },
           new { @class = "text-right" })
        </p>

        <hr>
        <!-- Date/Time -->
        <p><span class="glyphicon glyphicon-time"></span> @String.Format("Posted on {0:MM dd, yyyy} at {0:HH:mm}", Model.Date)</p>

        <hr>
        <p><span class="glyphicon glyphicon-star"></span> Rating: <span id="rating">@Model.Rating</span></p>
        @if (!Model.Author.Name.Equals(this.User.Identity.Name))
            {
            @Ajax.ActionLink(" ", "Rating",
       new { controller = "Post", id = Model.PostId, rating = BlogSystem.Domain.Utils.GlobalConstants.DislikePostValue },
       new AjaxOptions { UpdateTargetId = "rating", InsertionMode = InsertionMode.Replace, HttpMethod = "POST" },
       new { @class = "glyphicon glyphicon-arrow-down btn-lg" })
            @Ajax.ActionLink(" ", "Rating",
       new { controller = "Post", id = Model.PostId, rating = BlogSystem.Domain.Utils.GlobalConstants.LikePostValue },
       new AjaxOptions { UpdateTargetId = "rating", InsertionMode = InsertionMode.Replace, HttpMethod = "POST" },
       new { @class = "glyphicon glyphicon-arrow-up  btn-lg" })
        }

        <hr>
        <!-- Post Content -->
        <p class="lead">
            @Model.Subtitle
        </p>
        <p>
            @Html.Raw(Model.Text)
        </p>

        <hr>

        <!-- Blog Comments -->
        <!-- Comments Form -->

        <div class="well">
            @if (User.Identity.IsAuthenticated)
            {
                <h4>Leave a Comment:</h4>
                @Html.AntiForgeryToken();

                @Html.Partial("_CommentBoxPartial", new CommentViewModel { PostId = Model.PostId })
            }
            else
            {
                <p>
                    Only registered users can comment.
                    @Html.ActionLink("Login", "Login", "Account")
                </p>
            }
        </div>

        <hr>

        <!-- Posted Comments -->
        <!-- Comment -->

        <div id="comments">
            @Html.Action("RenderComments", "Comment", new { Model.Comments })
        </div>

    </div>



</div>