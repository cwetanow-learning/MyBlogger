@using BlogSystem.Domain.Contracts.Entities
@model BlogSystem.Web.Models.PostViewModel

@{
    ViewBag.Title = "PostView";
}

<div class="row">

    <!-- Blog Post Content Column -->
    <div class="col-lg-8">

        <!-- Blog Post -->
        <!-- Title -->
        <h1>@Model.Post.Title</h1>
        @if (Model.Post.Author.Name.Equals(this.User.Identity.Name))
        {
            @Html.ActionLink(" ", "Delete", new { controller = "Blog", postId = Model.Post.PostId }, new { @class = "pull-right glyphicon glyphicon-trash" })

        }

        <!-- Author -->
        <p class="lead">
            by <a href="#">@Model.Post.Author.UserName</a>
        </p>

        <hr>
        <!-- Date/Time -->
        <p><span class="glyphicon glyphicon-time"></span> @String.Format("Posted on {0:MM dd, yyyy} at {0:HH:mm}", Model.Post.Date)</p>

        <hr>
        <p><span class="glyphicon glyphicon-star"></span> Rating: <span id="rating">@Model.Post.Rating</span></p>
        @if (!Model.Post.Author.Name.Equals(this.User.Identity.Name))
        {
            @Ajax.ActionLink(" ", "Rating",
       new { controller = "Post", id = Model.Post.PostId, rating = BlogSystem.Domain.Utils.GlobalConstants.DislikePostValue },
       new AjaxOptions { UpdateTargetId = "rating", InsertionMode = InsertionMode.Replace, HttpMethod = "POST" },
       new { @class = "glyphicon glyphicon-arrow-down btn-lg" })
            @Ajax.ActionLink(" ", "Rating",
       new { controller = "Post", id = Model.Post.PostId, rating = BlogSystem.Domain.Utils.GlobalConstants.LikePostValue },
       new AjaxOptions { UpdateTargetId = "rating", InsertionMode = InsertionMode.Replace, HttpMethod = "POST" },
       new { @class = "glyphicon glyphicon-arrow-up  btn-lg" })
        }

        <hr>
        <!-- Post Content -->
        <p class="lead">
            @Model.Post.Subtitle
        </p>
        <p>
            @Html.Raw(Model.Post.Text)
        </p>

        <hr>

        <!-- Blog Comments -->
        <!-- Comments Form -->

        <div class="well">
            @if (User.Identity.IsAuthenticated)
            {
                <h4>Leave a Comment:</h4>
                @Html.AntiForgeryToken();

                using (Ajax.BeginForm("CommentPost",
                    new { controller = "Comment", postId = Model.Post.PostId, text = Model.CommentText },
                    new AjaxOptions { HttpMethod = "Post", InsertionMode = InsertionMode.InsertBefore }))
                {
                    @Html.TextAreaFor(m => m.CommentText, new { @class = "form-control", rows = 5 });
                    <input type="submit" class="btn btn-primary" value="Submit" />
                }

                @Html.TextAreaFor(m => m.CommentText, new { @class = "form-control", rows = 5 });
                @Ajax.ActionLink("Submit", "CommentPost", new
           {
               controller = "Comment",
               postId = Model.Post.PostId,
               text = Model.CommentText
           }, new AjaxOptions { HttpMethod = "Post", InsertionMode = InsertionMode.InsertBefore }, new { @class = "btn btn-primary" })
            }
            else
            {
                < p >
                Only registered users can comment.
                @Html.ActionLink("Login", "Login", "Account")
                </ p >
            }
        </div>

        <hr>

        <!-- Posted Comments -->
        <!-- Comment -->

        <div id="comments">
            @foreach (var comment in Model.Post.Comments)
            {
                Html.DisplayFor(c => comment);
            }
        </div>

    </div>



</div>
